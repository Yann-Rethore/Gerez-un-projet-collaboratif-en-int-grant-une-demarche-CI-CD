name: SonarQube
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonar-analysis:
    name: Unified SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Install Node (pour le frontend)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install front dependencies
        working-directory: front
        run: |
            npm install
             npm run test -- --watch=false --code-coverage --browsers ChromeHeadless

      - name: Build back-end
        working-directory: back
        run: |
            mvn clean install
            mvn verify

      - name: Run SonarQube analysis for front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.projectName=your_project_name \
            -Dsonar.sources=front/src \
            -Dsonar.tests=front/src \
            -Dsonar.javascript.lcov.reportPaths=front/coverage/lcov.info \
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Run SonarQube analysis for back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.projectName=your_project_name \
            -Dsonar.sources=back/src \
            -Dsonar.java.binaries=back/target/classes \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
